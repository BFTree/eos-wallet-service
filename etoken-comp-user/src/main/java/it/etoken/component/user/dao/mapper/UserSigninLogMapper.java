package it.etoken.component.user.dao.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import it.etoken.base.model.user.entity.UserSigninLog;
import it.etoken.base.model.user.entity.UserSigninLogExample;
import it.etoken.component.user.dao.provider.UserSigninLogSqlProvider;

@Mapper
public interface UserSigninLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @SelectProvider(type=UserSigninLogSqlProvider.class, method="countByExample")
    long countByExample(UserSigninLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @DeleteProvider(type=UserSigninLogSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserSigninLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @Delete({
        "delete from user_signin_log",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @Insert({
        "insert into user_signin_log (uid, nickname, ",
        "signdate)",
        "values (#{uid,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, ",
        "#{signdate,jdbcType=DATE})"
    })
    @Options(useGeneratedKeys = true, keyProperty = "id", keyColumn = "id")
    int insert(UserSigninLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @InsertProvider(type=UserSigninLogSqlProvider.class, method="insertSelective")
    int insertSelective(UserSigninLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @SelectProvider(type=UserSigninLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="uid", property="uid", jdbcType=JdbcType.BIGINT),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="signdate", property="signdate", jdbcType=JdbcType.DATE),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP)
    })
    List<UserSigninLog> selectByExample(UserSigninLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @Select({
        "select",
        "id, uid, nickname, signdate, createdate",
        "from user_signin_log",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="uid", property="uid", jdbcType=JdbcType.BIGINT),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="signdate", property="signdate", jdbcType=JdbcType.DATE),
        @Result(column="createdate", property="createdate", jdbcType=JdbcType.TIMESTAMP)
    })
    UserSigninLog selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @UpdateProvider(type=UserSigninLogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserSigninLog record, @Param("example") UserSigninLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @UpdateProvider(type=UserSigninLogSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserSigninLog record, @Param("example") UserSigninLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @UpdateProvider(type=UserSigninLogSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserSigninLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_signin_log
     *
     * @mbg.generated Tue May 22 18:15:17 CST 2018
     */
    @Update({
        "update user_signin_log",
        "set uid = #{uid,jdbcType=BIGINT},",
          "nickname = #{nickname,jdbcType=VARCHAR},",
          "signdate = #{signdate,jdbcType=DATE},",
          "createdate = #{createdate,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(UserSigninLog record);
}